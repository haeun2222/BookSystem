CREATE TABLE TB_USERTEST (
  USER_SEQ NUMBER PRIMARY KEY,
  USER_PASSWORD VARCHAR2(30),
  USER_NAME VARCHAR2(20),
  USER_EMAIL VARCHAR2(50) UNIQUE,
  USER_PHONE VARCHAR2(30),
  USER_BIRTH VARCHAR2(30),
  USER_AUTH CHAR(1),
  USER_DELFLAG CHAR(1),
  JOINDATE DATE,
  USER_GENDER VARCHAR2(20)
);



-- 남성 회원
INSERT INTO TB_USERTEST (
  USER_SEQ, USER_PASSWORD, USER_NAME, USER_EMAIL, USER_PHONE,
  USER_BIRTH, USER_AUTH, USER_DELFLAG, JOINDATE, USER_GENDER
) VALUES
  (5, '비밀번호5', '사용자5', 'user5@test.com', '010-1111-1115',
   '1994-01-15', 'U', 'N', TO_DATE('2023-09-06', 'YYYY-MM-DD'), '남성');
  


-- 여성 회원 
INSERT INTO TB_USERTEST (
  USER_SEQ, USER_PASSWORD, USER_NAME, USER_EMAIL, USER_PHONE,
  USER_BIRTH, USER_AUTH, USER_DELFLAG, JOINDATE, USER_GENDER
) VALUES
  (10, '비밀번호10', '사용자10', 'user10@test.com', '010-1111-1110',
   '1970-01-15', 'U', 'N', TO_DATE('2023-09-06', 'YYYY-MM-DD'), '여성');

  -- SQL 스크립트: 300개의 회원 더미 데이터 삽입
BEGIN
  FOR i IN 11..300 LOOP
    INSERT INTO TB_USERTEST (
      USER_SEQ, USER_PASSWORD, USER_NAME, USER_EMAIL, USER_PHONE,
      USER_BIRTH, USER_AUTH, USER_DELFLAG, JOINDATE, USER_GENDER
    ) VALUES (
      i, '비밀번호' || i, '사용자 ' || i, 'user' || i || '@example.com', '010-0000-000' || i,
      TO_CHAR(TO_DATE('1980-01-01', 'YYYY-MM-DD') + (i - 101) * 365, 'YYYY-MM-DD'), 'U', 'N',
      TO_DATE('2018-09-06', 'YYYY-MM-DD'), CASE WHEN MOD(i, 2) = 0 THEN '남성' ELSE '여성' END
    );
  END LOOP;
  COMMIT;
END;
 
  
SELECT USER_SEQ ,USER_NAME ,USER_GENDER ,USER_BIRTH
	FROM TB_USERTEST tu
	ORDER BY USER_SEQ ; 
---------------------------------------
CREATE TABLE TB_BOOKTEST (
  BOOK_SEQ NUMBER PRIMARY KEY,
  BOOK_TITLE VARCHAR2(100) NOT NULL,
  BOOK_WRITER VARCHAR2(50) NOT NULL,
  BOOK_IMG VARCHAR2(200) NOT NULL,
  BOOK_ISBN VARCHAR2(20) UNIQUE,
  BOOK_INTRO VARCHAR2(4000) NOT NULL,
  BOOK_PUBLISHER VARCHAR2(100) NOT NULL,
  BOOK_PUBLISHED_DATE DATE NOT NULL,
  BOOK_INDEX VARCHAR2(200),
  BOOK_SUMMARY VARCHAR2(4000)
);
---책
INSERT INTO TB_BOOKTEST (
  BOOK_SEQ, BOOK_TITLE, BOOK_WRITER, BOOK_IMG, BOOK_ISBN,
  BOOK_INTRO, BOOK_PUBLISHER, BOOK_PUBLISHED_DATE, BOOK_INDEX, BOOK_SUMMARY
) VALUES
  (8, '책 제목 8', '저자 8', '이미지.jpg', 'ISBN8',
   '책 소개 8', '출판사 8', TO_DATE('2000-09-06', 'YYYY-MM-DD'), '목차 8', '줄거리 8');

-- SQL 스크립트: 1000개의 책 더미 데이터 삽입
BEGIN
  FOR i IN 101..500 LOOP
    INSERT INTO TB_BOOKTEST (
      BOOK_SEQ, BOOK_TITLE, BOOK_WRITER, BOOK_IMG, BOOK_ISBN,
      BOOK_INTRO, BOOK_PUBLISHER, BOOK_PUBLISHED_DATE, BOOK_INDEX, BOOK_SUMMARY
    ) VALUES (
      i, '책 제목 ' || i, '저자 ' || i, '이미지' || i || '.jpg', 'ISBN' || i,
      '책 소개 ' || i, '출판사 ' || i, TO_DATE('2000-09-06', 'YYYY-MM-DD'), '목차 ' || i, '줄거리 ' || i
    );
  END LOOP;
  COMMIT;
END;
/
  
SELECT *
	FROM TB_BOOKTEST tb 
 



--------------------------------------------

CREATE TABLE TB_BOOK_RENTTEST (
  RENT_SEQ NUMBER PRIMARY KEY,
  USER_SEQ NUMBER REFERENCES TB_USERTEST(USER_SEQ),
  BOOK_SEQ NUMBER REFERENCES TB_BOOKTEST(BOOK_SEQ),
  RENT_DATE DATE DEFAULT SYSDATE,
  RENT_RETURN_DATE DATE,
  RENT_STATEMENT VARCHAR2(1)
);

-- SQL 스크립트: 100개의 더미 대출 데이터 삽입
BEGIN
  FOR i IN 201..300 LOOP
    INSERT INTO TB_BOOK_RENTTEST (
      RENT_SEQ, USER_SEQ, BOOK_SEQ, RENT_DATE, RENT_RETURN_DATE, RENT_STATEMENT
    ) VALUES (
      i, MOD(i, 400) + 101, 5, TO_DATE('2023-06-10', 'YYYY-MM-DD'), NULL, 'N'
    );
  END LOOP;
  COMMIT;
END;

SELECT *
	FROM TB_BOOK_RENTTEST tbr
	

------------------------------대출현황 TOP2 성별통계 쿼리테스트
WITH Top2Books AS (
  SELECT BOOK_SEQ , COUNT(*) AS loan_count
  FROM TB_BOOK_RENTTEST tbr
  GROUP BY BOOK_SEQ 
  ORDER BY loan_count DESC
  FETCH FIRST 2 ROWS ONLY
)
SELECT
  T2B.BOOK_SEQ,
  B.BOOK_TITLE,
  U.USER_GENDER,
  COUNT(*) AS loan_count
FROM
  Top2Books T2B
  JOIN TB_BOOK_RENTTEST R ON T2B.BOOK_SEQ = R.BOOK_SEQ
  JOIN TB_USERTEST U ON R.USER_SEQ = U.USER_SEQ
  JOIN TB_BOOKTEST B ON T2B.BOOK_SEQ = B.BOOK_SEQ
GROUP BY
  T2B.BOOK_SEQ,
  B.BOOK_TITLE,
  U.USER_GENDER
ORDER BY
  T2B.BOOK_SEQ,
  U.USER_GENDER;
 
 -------------------------대출현황 성별 통계 백분율(O)
 WITH Top2Books AS (
  SELECT BOOK_SEQ , COUNT(*) AS loan_count
  FROM TB_BOOK_RENTTEST tbr
  GROUP BY BOOK_SEQ 
  ORDER BY loan_count DESC
  FETCH FIRST 1 ROWS ONLY
),
GenderTest AS(
SELECT
  T2B.BOOK_SEQ,
  B.BOOK_TITLE,
  B.BOOK_IMG,
  U.USER_GENDER,
  COUNT(*) AS loan_count
FROM
  Top2Books T2B
  JOIN TB_BOOK_RENTTEST R ON T2B.BOOK_SEQ = R.BOOK_SEQ
  JOIN TB_USERTEST U ON R.USER_SEQ = U.USER_SEQ
  JOIN TB_BOOKTEST B ON T2B.BOOK_SEQ = B.BOOK_SEQ
GROUP BY
  T2B.BOOK_SEQ,
  B.BOOK_TITLE,
  B.BOOK_IMG,
  U.USER_GENDER
)  
SELECT 
	GT.BOOK_SEQ,
	GT.BOOK_IMG,
	GT.BOOK_TITLE,
	GT.USER_GENDER,
	TO_CHAR((GT.loan_count / SUM(GT.loan_count) OVER (PARTITION BY GT.BOOK_SEQ)) * 100, 'FM99990') || '%' AS PERCENT
FROM GenderTest GT	
ORDER BY
  GT.BOOK_SEQ,
  GT.USER_GENDER;

------------------------메인페이지에 뿌려질 대출현황TOP2 책 IMG
SELECT B.BOOK_IMG, B.BOOK_INTRO 
FROM (
  SELECT R.BOOK_SEQ
  FROM TB_BOOK_RENTTEST R
  GROUP BY R.BOOK_SEQ
  ORDER BY COUNT(*) DESC
  FETCH FIRST 1 ROWS ONLY
) Top2Books
JOIN TB_BOOKTEST B ON Top2Books.BOOK_SEQ = B.BOOK_SEQ;

-----------------------대출현황 연령별 통계

WITH Top2Books AS (
  SELECT BOOK_SEQ, COUNT(*) AS loan_count
  FROM TB_BOOK_RENTTEST
  GROUP BY BOOK_SEQ 
  ORDER BY loan_count DESC
  FETCH FIRST 2 ROWS ONLY
)
SELECT
  T2B.BOOK_SEQ,
  B.BOOK_TITLE,
  CASE 
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 19 AND EXTRACT(YEAR FROM SYSDATE) - 10 THEN '10대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 29 AND EXTRACT(YEAR FROM SYSDATE) - 20 THEN '20대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 39 AND EXTRACT(YEAR FROM SYSDATE) - 30 THEN '30대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 49 AND EXTRACT(YEAR FROM SYSDATE) - 40 THEN '40대'
    ELSE '50대 이상'
  END AS age_group,
  COUNT(*) AS loan_count
FROM
  Top2Books T2B
  JOIN TB_BOOK_RENTTEST R ON T2B.BOOK_SEQ = R.BOOK_SEQ
  JOIN TB_USERTEST U ON R.USER_SEQ = U.USER_SEQ
  JOIN TB_BOOKTEST B ON T2B.BOOK_SEQ = B.BOOK_SEQ
GROUP BY
  T2B.BOOK_SEQ,
  B.BOOK_TITLE,
  CASE 
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 19 AND EXTRACT(YEAR FROM SYSDATE) - 10 THEN '10대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 29 AND EXTRACT(YEAR FROM SYSDATE) - 20 THEN '20대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 39 AND EXTRACT(YEAR FROM SYSDATE) - 30 THEN '30대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 49 AND EXTRACT(YEAR FROM SYSDATE) - 40 THEN '40대'
    ELSE '50대 이상'
  END
ORDER BY
  T2B.BOOK_SEQ,
  age_group;
 
---------------------대출현황 연령별통계 백분율

WITH Top2Books AS (
  SELECT BOOK_SEQ, COUNT(*) AS loan_count
  FROM TB_BOOK_RENTTEST
  GROUP BY BOOK_SEQ 
  ORDER BY loan_count DESC
  FETCH FIRST 1 ROWS ONLY
)
SELECT
  T2B.BOOK_SEQ,
  B.BOOK_TITLE,
  CASE 
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 19 AND EXTRACT(YEAR FROM SYSDATE) - 10 THEN '10대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 29 AND EXTRACT(YEAR FROM SYSDATE) - 20 THEN '20대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 39 AND EXTRACT(YEAR FROM SYSDATE) - 30 THEN '30대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 49 AND EXTRACT(YEAR FROM SYSDATE) - 40 THEN '40대'
    ELSE '50대 이상'
  END AS age_group,
  TO_CHAR(
    (COUNT(*) / SUM(COUNT(*)) OVER (PARTITION BY T2B.BOOK_SEQ)) * 100, 'FM99990') || '%' AS percent
FROM
  Top2Books T2B
  JOIN TB_BOOK_RENTTEST R ON T2B.BOOK_SEQ = R.BOOK_SEQ
  JOIN TB_USERTEST U ON R.USER_SEQ = U.USER_SEQ
  JOIN TB_BOOKTEST B ON T2B.BOOK_SEQ = B.BOOK_SEQ
GROUP BY
  T2B.BOOK_SEQ,
  B.BOOK_TITLE,
  CASE 
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 19 AND EXTRACT(YEAR FROM SYSDATE) - 10 THEN '10대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 29 AND EXTRACT(YEAR FROM SYSDATE) - 20 THEN '20대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 39 AND EXTRACT(YEAR FROM SYSDATE) - 30 THEN '30대'
    WHEN TO_NUMBER(SUBSTR(U.USER_BIRTH, 1, 4)) BETWEEN EXTRACT(YEAR FROM SYSDATE) - 49 AND EXTRACT(YEAR FROM SYSDATE) - 40 THEN '40대'
    ELSE '50대 이상'
  END
ORDER BY
  T2B.BOOK_SEQ,
  age_group;
