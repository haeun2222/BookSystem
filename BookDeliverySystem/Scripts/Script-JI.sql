-- 배송테이블 생성
CREATE TABLE TB_DELIVERY(
   DELIVERY_SEQ NUMBER PRIMARY KEY,
   USER_SEQ NUMBER REFERENCES TB_USER(USER_SEQ),
   DELIVERY_NAME VARCHAR2(30) NOT NULL,
   DELIVERY_PHONE VARCHAR2(30) NOT NULL,
   POSTCODE VARCHAR2(10) NOT NULL,
   ADDRESS VARCHAR2(100) NOT NULL,
   DETADDR VARCHAR2(100),
   EXTADDR VARCHAR2(100),
   DELIVERY_NUM NUMBER
);

CREATE SEQUENCE SQ_DELIVERY START WITH 6000000 INCREMENT BY 1;

DROP TABLE TB_DELIVERY;



DROP TABLE TB_PAY;

----결제테이블 생성
CREATE TABLE TB_PAY(
    PAY_SEQ NUMBER PRIMARY KEY,
    PAY_IMD VARCHAR2(50),
    USER_SEQ NUMBER REFERENCES TB_USER(USER_SEQ),
    PAY_PAYMENT NUMBER NOT NULL,
    PAY_DATE DATE NOT NULL
);


--조인
--SELECT *
--FROM TB_PAY P
--INNER JOIN TB_USER U ON P.USER_SEQ = U.USER_SEQ
--INNER JOIN TB_DELIVERY D ON P.DELIVERY_SEQ = D.DELIVERY_SEQ;




CREATE TABLE TB_PAY(
    PAY_SEQ NUMBER PRIMARY KEY,
    PAY_IMD VARCHAR2(50),
    USER_SEQ NUMBER REFERENCES TB_USER(USER_SEQ),
    PAY_PAYMENT NUMBER NOT NULL,
    PAY_DATE DATE NOT NULL,
    DELIVERY_SEQ NUMBER REFERENCES TB_DELIVERY(DELIVERY_SEQ),
    DELIVERY_PHONE VARCHAR2(30),
    POSTCODE VARCHAR(10),
    ADDRESS VARCHAR(100)
);


-- 유저와 배송테이블 조인
SELECT *
FROM TB_DELIVERY D
JOIN TB_USER U ON D.USER_SEQ = U.USER_SEQ;

--두 테이블 조인 확인
SELECT D.*, U.*
FROM TB_DELIVERY D
LEFT JOIN TB_USER U ON D.USER_SEQ = U.USER_SEQ
WHERE U.USER_SEQ IS NOT NULL;


--유저의 맨 마지막 주소
 SELECT D.DELIVERY_SEQ, D.USER_SEQ, D.DELIVERY_NAME, D.DELIVERY_PHONE, D.POSTCODE, D.ADDRESS, D.DETADDR, D.EXTADDR, D.DELIVERY_NUM
    FROM TB_DELIVERY D
    LEFT JOIN TB_USER U ON D.USER_SEQ = U.USER_SEQ
    WHERE D.USER_SEQ = 1
    ORDER BY D.DELIVERY_SEQ  DESC  
    FETCH FIRST 1 ROW ONLY;
    
    
--송장번호 업데이트
UPDATE TB_DELIVERY 
SET DELIVERY_NUM = '5645489756'
WHERE DELIVERY_SEQ = '600020';


--전회원 결제내역
SELECT PAY_SEQ, PAY_IMD, USER_SEQ, PAY_PAYMENT, PAY_DATE
FROM BOOK.TB_PAY;

-- 유저의 결제내역
SELECT P.PAY_SEQ, P.PAY_IMD, P.USER_SEQ, P.PAY_PAYMENT, P.PAY_DATE
FROM TB_PAY P
INNER JOIN TB_USER U ON P.USER_SEQ = U.USER_SEQ
WHERE U.USER_SEQ =53
ORDER BY P.PAY_SEQ DESC;

-- 배송테이블 생성
CREATE TABLE TB_DELIVERY(
   DELIVERY_SEQ NUMBER PRIMARY KEY,
   USER_SEQ NUMBER REFERENCES TB_USER(USER_SEQ),
   RENT_SEQ NUMBER REFERENCES TB_BOOK_RENT(RENT_SEQ),
   DELIVERY_NAME VARCHAR2(30) NOT NULL,
   DELIVERY_PHONE VARCHAR2(30) NOT NULL,
   POSTCODE VARCHAR2(10) NOT NULL,
   ADDRESS VARCHAR2(100) NOT NULL,
   DETADDR VARCHAR2(100),
   EXTADDR VARCHAR2(100),
   DELIVERY_NUM NUMBER
);

CREATE SEQUENCE SQ_DELIVERY START WITH 1 INCREMENT BY 1;

DROP TABLE TB_DELIVERY;

ALTER TABLE TB_DELIVERY
ADD rent_seq NUMBER;


SELECT *
FROM TB_DELIVERY d
INNER JOIN TB_BOOK_RENT r
ON d.RENT_SEQ = r.RENT_SEQ;

-- 렌트 테이블의 맨 마지막 user_seq의 상태만 변경
   UPDATE TB_BOOK_RENT
    SET RENT_STATUS = 'B'
    WHERE USER_SEQ = 53
    AND RENT_SEQ = (
        SELECT MAX(RENT_SEQ)
        FROM TB_BOOK_RENT
        WHERE USER_SEQ = 53
    );



--두 개의 쿼리를 하나의 트랜잭션으로 실행
DECLARE
  v_user_seq NUMBER := 53; -- 사용자의 USER_SEQ 값
  v_delivery_name VARCHAR2(255) := '1'; -- 배송지 이름
  v_delivery_phone VARCHAR2(20) := '1'; -- 배송지 전화번호
  v_postcode VARCHAR2(10) := '1'; -- 우편번호
  v_address VARCHAR2(255) := '1'; -- 주소
  v_detaddr VARCHAR2(255) := '1'; -- 상세주소
  v_extaddr VARCHAR2(255) := '1'; -- 확장주소
BEGIN
  -- 첫 번째 쿼리: 배송지 주소 입력
  INSERT INTO TB_DELIVERY
  (DELIVERY_SEQ, USER_SEQ, DELIVERY_NAME, DELIVERY_PHONE, POSTCODE, ADDRESS, DETADDR, EXTADDR, DELIVERY_NUM)
  VALUES(SQ_DELIVERY.NEXTVAL, v_user_seq, v_delivery_name, v_delivery_phone, v_postcode, v_address, v_detaddr, v_extaddr, NULL);
  -- 두 번째 쿼리: 대출 상태 업데이트
  UPDATE TB_BOOK_RENT
  SET RENT_STATUS = 'A'
  WHERE USER_SEQ = v_user_seq;
  COMMIT; -- 트랜잭션 커밋
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK; -- 예외 발생 시 롤백
    RAISE;    -- 예외를 다시 던지거나 처리
END;


